We can implement stacks using:
a) arrays
b) linked lists

Array implementation:
int A[10]
top <- -1 //empty stack
Push(x)
{
    top <- top+1
    A[top]<-x
}
Pop()
{
    top <- top-1
}
Top()
{
    return A[top]
}
IsEmpty()
{
    if (top == -1)
        return true
    else
        return false
}

overflow: create a larger array. copy all elements in a new array

//Stack - Array based implementation
#include<stdio.h>
#define MAX_SIZE 101
int A[MAX_SIZE];
int top = -1;
void Push(int x){
    if(top == MAX_SIZE-1) {
        printf("Error: Stack overflow\n");
        return;
    }
    top++;
    A[top] = x;
    // or use A[++top] = x;
}
void Pop(){
     if(top == -1) {
        printf("Error: No element to pop\n");
        return;
    }
    top--;
}
int Top() {
    return A[top];
}
void Print() {
    int i;
    printf("Stack: ");
    for(i=0;i<=top;i++)
        printf("%d ",A[i]);
    printf("\n");
}
int main() {
    Push(2);Print();
    Push(5);Print();
    Push(10);Print();
    Pop();Print();
    Push(12);Print();
}